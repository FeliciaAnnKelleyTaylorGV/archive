10. Landscape Analysis (required):

Describe the other software tools (either proprietary or open source) that the audience for this proposal is primarily using. How do the software projects in this proposal compare to these other tools in terms of size of user base, usage, and maturity? How do existing tools and the project(s) in this proposal interact? (maximum of 250 words)

Biomedical researchers have a variety of software options besides SciPy. Matlab and its toolboxes have similar functionality to SciPy, but Matlab is neither free nor open source. Boost is permissively-licensed, open source, and it implements many of the same algorithms as SciPy, but it is less accessible as it is written in a comparatively complex, compiled language (C++). Much of SciPy's functionality is distributed across several packages in Julia and R, but neither has a similarly mature, unified suite of tools. These shortcomings often lead researchers to SciPy, which is the only popular foundational mathematical algorithms library for Python, with a twenty-year history, ten thousand dependent packages, hundreds of thousands of dependent repositories, and millions of users.
Regarding interaction, SciPy's IO subpackage contains functions for reading and writing Matlab's .MAT data files. SciPy uses Boost as a reference, and we are working to vendor some of Boost's statistics routines. Many R and Julia users are multilingual, using and contributing to the Python scientific ecosystem, too. SciPy interacts with downstream package creators and users primarily on GitHub via bug reports and feature requests.